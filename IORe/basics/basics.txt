

When you jailbreak a device:

First see you use a tfp0 enabled jb, from this site:

https://www.theiphonewiki.com/wiki/Tfp0_patch

to update a jailbroken device (fix tfp0)
open ifiles and move the new .dmg to the directory and install..
you should see a msg on the installer that the ver is now (for example):
0.1 -> 0.3


Move files to iOS:

Install cydia (after jb)
From cydia install all the things from this place:

https://cydia.saurik.com/copying.html

The best way to move things is by files:
Click the globe icon and navigate to ip:10000

Running code:

Compile native iOS on Mac/linux:

Install Xcode (from apple developer)

Compile:

(This will check tfp0)

cat > foo.c:

SOF:
...

#include <mach/mach.h>

int main(void) {
    mach_port_t kernel_task = 0;
    return task_for_pid(mach_task_self(), 0, &kernel_task);
}

...
EOF

(At the next command use the latest sdk..)

clang foo.c  -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk -arch armv7 -arch armv7s -arch arm64 -o foo


touch a.plist

cat > a.plist:

SOF:
...

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>get-task-allow</key>
    <true/>
    <key>run-unsigned-code</key>
    <true/>
    <key>task_for_pid-allow</key>
    <true/>
</dict>
</plist>

...
EOF


ldid -Sa.plist foo



(Copy the file to the iOS -- see next)

https://iphonedevwiki.net/index.php/SSH_Over_USB

Ssh to the iOS:

ssh root@ip

Password:alpine

Navigate to the folder:

root$ chmod a+x foo
(Not needed: ldid -S foo)

If tfp0 is enabled:
root$ echo $?
0
root$
Else:
root$ echo $?
5
root$


download ipsw of kernel to find functions...
https://ipsw.me/#download


compiling and running your own (xcode) applications on a jailbroken device:



build from the fucking terminal please:

http://iphonedevwiki.net/index.php/Xcode

copy the fking application (zip)
unzip it
and then enter the inner dirs and look for the fucking application w/o
the .app
ldid -S fkingapp
chmod a+x fkingapp
./fkingapp


http://www.sysrage.net/guides/ios-programming/building-and-running-ios-applications-without-a-paid-developer-license

--file: copying.html

(Full text at the end)

Getting Files to/from Your Device

One of the advantages of having a jailbroken device is being able to access the filesystem on your device and modify its files or transfer any of them to another computer.

To get to the filesystem you might use any of the following tools:

Cydia Packages

Secure Copy Protocol: Install OpenSSH to let you connect to your device with a standard SCP or SFTP client. You can use a terminal to connect (and you should use one to change the default password) or a graphical desktop application such as:
Cyberduck (Mac): http://cyberduck.ch/
WinSCP (Windows): http://winscp.net/

Apple Filing Protocol: Install Netatalk to make your device show up in Finder under Shared. (You may need to reboot your device after installation for this to work.)

On Device: Install iFile to access the filesystem from an app on the device.

Desktop Applications

If you jailbroke your device with Pangu or evasi0n7, you will first need to install Apple File Conduit "2" to get full filesystem access over USB. (Most earlier jailbreaks include this service by default.)

DiskAid for Mac & Windows
(free, $30 for extra features):
http://www.digidna.net/diskaid/

iExplorer for Mac & Windows
(free trial, $35 for full features):
http://www.macroplant.com/iexplorer/

iPhoneBrowser for Windows (free):
http://code.google.com/p/iphonebrowser/

Phone Disk for Mac & Windows (free)
http://www.macroplant.com/phonedisk/

PhoneView for Mac
(free trial, $30 for unlimited use):
http://www.ecamm.com/mac/phoneview/
